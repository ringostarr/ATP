N AFF_DIM_HALFSPACE_LT
C |- (!a. (!b. ((aff_dim (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))))
T c= caff_dim * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D AFF_DIM_EMPTY
A |- ((aff_dim EMPTY) = (int_neg (int_of_num (NUMERAL (BIT1 _0)))))
T c= caff_dim part cEMPTY cint_neg cint_of_num cNUMERAL cBIT1 c_0
D AFF_DIM_AFFINE_HULL
A |- (!s. ((aff_dim ((hull affine) s)) = (aff_dim s)))
T c= caff_dim * * part chull part caffine f0 caff_dim f0
D AFF_DIM_UNIV
A |- ((aff_dim UNIV) = (int_of_num (dimindex UNIV)))
T c= caff_dim part cUNIV cint_of_num cdimindex part cUNIV
D AFFINE_HULL_HALFSPACE_LT
A |- (!a. (!b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))))
T c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV
+ |- ((aff_dim (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))
T c= caff_dim * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = (int_of_num (dimindex UNIV))))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV cint_of_num cdimindex part cUNIV
- |- ((\t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b1 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 b0 b1 f3
- ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) /\ (EMPTY = EMPTY))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cEMPTY part cEMPTY
+ |- ((\a. (!b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)))) a)
T * / ! c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b2 creal_lt cdot b0 b3 b1 b3 * * * part cCOND c/\ c= b0 cvec cNUMERAL c_0 creal_le b1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV f0
+ |- ((aff_dim s) = (aff_dim ((hull affine) s)))
T c= caff_dim f0 caff_dim * * part chull part caffine f0
+ |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- ((\g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= part cUNIV b2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND b0 b1 b2 f2
+ |- (T = ((aff_dim UNIV) = (((COND F) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c= cT c= caff_dim part cUNIV cCOND cF cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = T)
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cT
+ |- ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) /\ ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))))
T c/\ c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- ((aff_dim EMPTY) = (((COND T) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))
T c= caff_dim part cEMPTY cCOND cT cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))
T c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV f4 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 f3 f4
+ |- (((aff_dim (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = T)
T c= c= caff_dim * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cT
+ |- (((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) /\ ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))) = ((aff_dim (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c= c/\ c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- ((\b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))) b)
T * / c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b1 creal_lt cdot f0 b2 b0 b2 * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le b0 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV f1
- |- ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = UNIV))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV part cUNIV
- |- (((!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))) ==> ((\e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))) e')) = ((\e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= part cUNIV b0 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 f3 b0 * / c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= part cUNIV b0 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 f3 b0 f4 * / c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= part cUNIV b0 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 f3 b0 f4
+ ((aff_dim ((hull affine) s)) = (aff_dim s)) |- ((aff_dim s) = (aff_dim ((hull affine) s)))
T c==> c= caff_dim * * part chull part caffine f0 caff_dim f0 c= caff_dim f0 caff_dim * * part chull part caffine f0
- |- (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) e')))
T c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV f2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 f2
- |- ((\t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= part cUNIV b1 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 b0 b1 f3
+ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((aff_dim EMPTY) = (((COND T) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= c= caff_dim part cEMPTY cCOND cT cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((aff_dim EMPTY) = (((COND T) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim part cEMPTY cCOND cT cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- (((aff_dim ((hull affine) (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x)))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((aff_dim (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c= c= caff_dim * * part chull part caffine * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ ((aff_dim s) = (aff_dim ((hull affine) s))) |- ((aff_dim ((hull affine) s)) = (aff_dim s))
T c==> c= caff_dim f0 caff_dim * * part chull part caffine f0 c= caff_dim * * part chull part caffine f0 caff_dim f0
+ |- (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) = ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) /\ ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))))
T c= c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c/\ c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- (~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) |- ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) /\ ((int_of_num (dimindex UNIV)) = (int_of_num (dimindex UNIV))))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV cint_of_num cdimindex part cUNIV
+ |- (((!b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))) ==> ((\b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))) b)) = ((\b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))) b))
T c= c==> ! c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b1 creal_lt cdot f0 b2 b0 b2 * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le b0 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * / c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b1 creal_lt cdot f0 b2 b0 b2 * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le b0 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV f1 * / c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b1 creal_lt cdot f0 b2 b0 b2 * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le b0 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV f1
- |- ((\g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cint_of_num cdimindex part cUNIV b2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND b0 b1 b2 f2
- |- (((!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b1 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 b0 b1 * / ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b1 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 b0 b1 f3 * / ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b1 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 b0 b1 f3
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = (int_neg (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= part cUNIV b1 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 b0 b1 * / ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= part cUNIV b1 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 b0 b1 f3 * / ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= part cUNIV b1 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 b0 b1 f3
- ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((real_le b) (real_of_num (NUMERAL _0))) = T)
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= creal_le f1 creal_of_num cNUMERAL c_0 cT
+ (~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = F)
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cF
- |- ((((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = UNIV)) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))) = ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)))
T c= c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV part cUNIV c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV
- |- ((\e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))) e')
T * / c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= part cUNIV b0 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND f2 f3 b0 f4
+ |- ((aff_dim ((hull affine) (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x)))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))
T c= caff_dim * * part chull part caffine * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!a. (!b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)))) ==> ((\a. (!b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)))) a)) = ((\a. (!b. (((hull affine) (GSPEC (\GEN%PVAR%1543. (?x. (((SETSPEC GEN%PVAR%1543) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)))) a))
T c= c==> ! ! c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b2 creal_lt cdot b0 b3 b1 b3 * * * part cCOND c/\ c= b0 cvec cNUMERAL c_0 creal_le b1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * / ! c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b2 creal_lt cdot b0 b3 b1 b3 * * * part cCOND c/\ c= b0 cvec cNUMERAL c_0 creal_le b1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV f0 * / ! c= * * part chull part caffine * part cGSPEC / c? / cSETSPEC b2 creal_lt cdot b0 b3 b1 b3 * * * part cCOND c/\ c= b0 cvec cNUMERAL c_0 creal_le b1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV f0
+ (~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) |- ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) /\ ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> (EMPTY = EMPTY))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cEMPTY part cEMPTY
+ |- (((!s. ((aff_dim s) = (aff_dim ((hull affine) s)))) ==> ((\s. ((aff_dim s) = (aff_dim ((hull affine) s)))) s)) = ((\s. ((aff_dim s) = (aff_dim ((hull affine) s)))) s))
T c= c==> ! c= caff_dim b0 caff_dim * * part chull part caffine b0 * / c= caff_dim b0 caff_dim * * part chull part caffine b0 f0 * / c= caff_dim b0 caff_dim * * part chull part caffine b0 f0
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- |- (((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> (EMPTY = EMPTY)) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) e')))) = (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) e'))))
T c= c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cEMPTY part cEMPTY c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV f2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV f2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY f2
- |- (((!g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cint_of_num cdimindex part cUNIV b2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND b0 b1 b2 * / ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cint_of_num cdimindex part cUNIV b2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND b0 b1 b2 f2 * / ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cint_of_num cdimindex part cUNIV b2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND b0 b1 b2 f2
+ |- ((aff_dim UNIV) = (((COND F) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))
T c= caff_dim part cUNIV cCOND cF cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- ((\e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))) e')
T * / c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b0 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 f3 b0 f4
- |- (((!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))) ==> ((\e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))) e')) = ((\e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b0 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 f3 b0 * / c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b0 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 f3 b0 f4 * / c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 c==> c==> f2 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= cint_of_num cdimindex part cUNIV b0 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND f2 f3 b0 f4
- |- (((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = (int_neg (int_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) e')))) = (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) e'))))
T c= c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV f2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV f2 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 f2
+ (~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) |- (((aff_dim UNIV) = (((COND F) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= c= caff_dim part cUNIV cCOND cF cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- (((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> (EMPTY = t')) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) t') e'))))) = ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> (EMPTY = t')) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) t') e')))))
T c= c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cEMPTY f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV f3 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 f3 c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cEMPTY f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV f3 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 f3
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ (~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) |- (((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((aff_dim UNIV) = (((COND F) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim part cUNIV cCOND cF cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- ((\s. ((aff_dim s) = (aff_dim ((hull affine) s)))) s)
T * / c= caff_dim b0 caff_dim * * part chull part caffine b0 f0
- ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) /\ ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = (int_neg (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> (EMPTY = t')) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) t') e'))))
T c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cEMPTY f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV f3 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 f3
- (~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) |- ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) /\ (UNIV = UNIV))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV part cUNIV
+ |- ((!b. ((aff_dim (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) = T)
T c= ! c= caff_dim * part cGSPEC / c? / cSETSPEC b1 creal_lt cdot f0 b2 b0 b2 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le b0 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cT
+ |- (T = ((aff_dim EMPTY) = (((COND T) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c= cT c= caff_dim part cEMPTY cCOND cT cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV))
T c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV
+ |- ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- (((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) t') e'))))) = ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((int_neg (int_of_num (NUMERAL (BIT1 _0)))) = t')) ==> (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) t') e')))))
T c= c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV f3 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 f3 c==> c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_neg cint_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV f3 c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 f2 f3
- |- ((((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((int_of_num (dimindex UNIV)) = (int_of_num (dimindex UNIV)))) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) = ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c= c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= cint_of_num cdimindex part cUNIV cint_of_num cdimindex part cUNIV c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- (((aff_dim (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) ==> ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV))))) /\ ((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> ((aff_dim UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))))
T c= c= caff_dim * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c/\ c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- (((aff_dim (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV)) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))) = ((aff_dim ((hull affine) (GSPEC (\GEN%PVAR%1548. (?x. (((SETSPEC GEN%PVAR%1548) ((real_lt ((dot a) x)) b)) x)))))) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c= c= caff_dim * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV c= caff_dim * * part chull part caffine * part cGSPEC / c? / cSETSPEC b0 creal_lt cdot f0 b1 f1 b1 cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
- |- (((!g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= part cUNIV b2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND b0 b1 b2 * / ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= part cUNIV b2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND b0 b1 b2 f2 * / ! ! c==> c= c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= part cUNIV b2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND b0 b1 b2 f2
- |- (((~ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) ==> (UNIV = e')) ==> ((((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) UNIV) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) EMPTY) e')))
T c==> c==> c~ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= part cUNIV f2 c= * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY part cUNIV * * * part cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 part cEMPTY f2
+ ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) |- (((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0)))) /\ ((aff_dim EMPTY) = (((COND ((a = (vec (NUMERAL _0))) /\ ((real_le b) (real_of_num (NUMERAL _0))))) (int_neg (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (dimindex UNIV)))))
T c==> c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 c= caff_dim part cEMPTY cCOND c/\ c= f0 cvec cNUMERAL c_0 creal_le f1 creal_of_num cNUMERAL c_0 cint_neg cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cdimindex part cUNIV
+ |- ((((COND T) t1) t2) = t1)
T c= cCOND cT f0 f1 f0
